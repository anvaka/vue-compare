{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport { onMount } from 'svelte';\n\nvar WIDTH = 800\nvar HEIGHT = 600\nvar model = createModel(1000);\nvar points = model.points;\nvar raf;\n\nvar counter = 0;\nvar startTime = new Date();\nsetInterval(printStats, 10000);\n\nonMount(() => {\n\trequestAnimationFrame(frame);\n});\n\nfunction frame() {\n\traf = window.requestAnimationFrame(frame)\n\tmodel.step()\n\tpoints = model.points\n\tcounter++;\n}\n\nfunction printStats() {\n  var currentTime = new Date();\n  var elapsed = (currentTime - startTime)/1000;\n  console.log(counter + ' calls in last ' + elapsed + 's');\n  console.log(counter/elapsed + ' fps per second over ' + elapsed + 's time period');\n  counter = 0;\n  startTime = new Date();\n}\n\nfunction createModel (count) {\n  var points = []\n  for (var i = 0; i < count; ++i) {\n    points.push({\n      x: Math.random() * WIDTH,\n      y: Math.random() * HEIGHT,\n      vx: Math.random() * 4 - 2,\n      vy: Math.random() * 4 - 2\n    })\n  }\n\n  return {\n    points,\n    step\n  }\n\n  function step () {\n\t\tpoints.forEach(move)\n  }\n\n  function move (p) {\n    if (p.x > WIDTH || p.x < 0) p.vx *= -1\n    if (p.y > HEIGHT || p.y < 0) p.vy *= -1\n    p.y += p.vy\n    p.x += p.vx\n  }\n}\n</script>\n\n<style>\nhtml, body {\n  height: 100%;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n}\nsvg {\n  width: 800px;\n  height: 600px;\n}\n</style>\n\n <svg>\n {#each points as point}\n    <circle cx={point.x} cy={point.y} r='2px' fill='#FC309D'></circle>\n\t{/each}\n </svg>\n"
  ],
  "names": [],
  "mappings": "AAqEA,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACf,CAAC"
}